// <auto-generated />
using System;
using HotelLibrary.data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HotelLibrary.Migrations
{
    [DbContext(typeof(HotellContext))]
    [Migration("20240520225426_AddTaskModel3")]
    partial class AddTaskModel3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HotelLibrary.models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCheckedIn")
                        .HasColumnType("bit");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CheckInDate = new DateTime(2024, 5, 22, 0, 54, 25, 845, DateTimeKind.Local).AddTicks(3368),
                            CheckOutDate = new DateTime(2024, 5, 24, 0, 54, 25, 845, DateTimeKind.Local).AddTicks(3417),
                            CustomerName = "John Doe",
                            IsCheckedIn = false,
                            RoomId = 1
                        });
                });

            modelBuilder.Entity("HotelLibrary.models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Beds")
                        .HasColumnType("int");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("NeedsCleaning")
                        .HasColumnType("bit");

                    b.Property<bool>("NeedsMaintenance")
                        .HasColumnType("bit");

                    b.Property<bool>("NeedsRoomService")
                        .HasColumnType("bit");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Beds = 2,
                            IsAvailable = true,
                            Name = "Deluxe Suite",
                            NeedsCleaning = false,
                            NeedsMaintenance = false,
                            NeedsRoomService = false,
                            Size = "Large"
                        },
                        new
                        {
                            Id = 2,
                            Beds = 1,
                            IsAvailable = true,
                            Name = "Standard Room",
                            NeedsCleaning = false,
                            NeedsMaintenance = false,
                            NeedsRoomService = false,
                            Size = "Medium"
                        },
                        new
                        {
                            Id = 3,
                            Beds = 1,
                            IsAvailable = true,
                            Name = "Single Room",
                            NeedsCleaning = false,
                            NeedsMaintenance = false,
                            NeedsRoomService = false,
                            Size = "Small"
                        });
                });

            modelBuilder.Entity("HotelLibrary.models.TaskModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CompletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaskType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("HotelLibrary.models.Reservation", b =>
                {
                    b.HasOne("HotelLibrary.models.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("HotelLibrary.models.TaskModel", b =>
                {
                    b.HasOne("HotelLibrary.models.Room", "Room")
                        .WithMany("Tasks")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("HotelLibrary.models.Room", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
