// <auto-generated />
using System;
using HotelLibrary.data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HotelLibrary.Migrations
{
    [DbContext(typeof(HotellContext))]
    partial class HotellContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HotelLibrary.models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CheckInDate = new DateTime(2024, 5, 20, 17, 14, 30, 891, DateTimeKind.Local).AddTicks(757),
                            CheckOutDate = new DateTime(2024, 5, 22, 17, 14, 30, 891, DateTimeKind.Local).AddTicks(814),
                            CustomerName = "John Doe",
                            RoomId = 1
                        });
                });

            modelBuilder.Entity("HotelLibrary.models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Beds")
                        .HasColumnType("int");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Beds = 2,
                            IsAvailable = true,
                            Name = "Deluxe Suite",
                            Size = "Large"
                        },
                        new
                        {
                            Id = 2,
                            Beds = 1,
                            IsAvailable = true,
                            Name = "Standard Room",
                            Size = "Medium"
                        },
                        new
                        {
                            Id = 3,
                            Beds = 1,
                            IsAvailable = true,
                            Name = "Single Room",
                            Size = "Small"
                        });
                });

            modelBuilder.Entity("HotelLibrary.models.Reservation", b =>
                {
                    b.HasOne("HotelLibrary.models.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });
#pragma warning restore 612, 618
        }
    }
}
